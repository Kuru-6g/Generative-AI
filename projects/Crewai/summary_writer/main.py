import os
from dotenv import load_dotenv
from crewai import Agent, Task, Crew

from crewai_tools import SerperDevTool

from langchain_openai import AzureChatOpenAI

load_dotenv()

azure_llm = AzureChatOpenAI(
    # azure_endpoint=os.environ.get("AZURE_OPENAI_ENDPOINT"),
    # api_key=os.environ.get("AZURE_OPENAI_KEY")
    azure_deployment=os.environ.get("AZURE_OPENAI_DEPLOYMENT"), temperature=0.0
)



search_tool = SerperDevTool()



# Define your agents with roles, goals, tools, and additional attributes

researcher = Agent(

  role='Senior Research Analyst',

  goal='Uncover cutting-edge developments in AI and data science',

  backstory=(

    "You are a Senior Research Analyst at a leading tech think tank."

    "Your expertise lies in identifying emerging trends and technologies in AI and data science."

    "You have a knack for dissecting complex data and presenting actionable insights."

  ),

  verbose=True,

  allow_delegation=False,

  tools=[search_tool],

  max_rpm=100,
  llm = azure_llm

)

writer = Agent(

  role='Tech Content Strategist',

  goal='Craft compelling content on tech advancements',

  backstory=(

    "You are a renowned Tech Content Strategist, known for your insightful and engaging articles on technology and innovation."

    "With a deep understanding of the tech industry, you transform complex concepts into compelling narratives."

  ),

  verbose=True,

  allow_delegation=True,

  tools=[search_tool],

  cache=False, # Disable cache for this agent
  llm=azure_llm
)

plagiarismchecker = Agent(

  role='plagarism checker',

  goal='check with other document from internet',

  backstory=(

    "You are a plagarism checker."

    "With a deep understanding of the tech industry, you transform complex concepts into compelling narratives."

  ),

  verbose=True,

  allow_delegation=True,
  tools=[search_tool],

  cache=False, # Disable cache for this agent
  llm=azure_llm
)


# Create tasks for your agents

task1 = Task(

  description=(

    "Conduct a comprehensive analysis of the latest advancements in AI in 2024."

    "Identify key trends, breakthrough technologies, and potential industry impacts."

    "Compile your findings in a detailed report."

    "Make sure to check with a human if the draft is good before finalizing your answer."

  ),

  expected_output='A comprehensive full report on the latest AI advancements in 2024, leave nothing out',

  agent=researcher,

  human_input=True,

)



task2 = Task(

  description=(

    "Using the insights from the researcher's report, develop an engaging blog post that highlights the most significant AI advancements."

    "Your post should be informative yet accessible, catering to a tech-savvy audience."

    "Aim for a narrative that captures the essence of these breakthroughs and their implications for the future."

  ),

  expected_output='A compelling 3 paragraphs blog post formatted as markdown about the latest AI advancements in 2024',

  agent=writer

)

task3 = Task(

  description=(

    "Review the blog post generated by the writer for any instances of plagiarism."

    "Use advanced algorithms and databases to detect any similarities with existing content."

    "Provide a detailed report highlighting any potential plagiarism, including the source of the original content."

  ),

  expected_output='A plagiarism report indicating the percentage of originality and any sources of plagiarism',

  agent=plagiarismchecker

)


# Instantiate your crew with a sequential process

crew = Crew(

  agents=[researcher, writer, plagiarismchecker],

  tasks=[task1, task2, task3],

  verbose=5

)



# Get your crew to work!

result = crew.kickoff()



print("######################")

print(result)